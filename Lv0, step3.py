# Step 3. Условный оператор

# 1 Не туда
'''Напишите программу, которая выясняет, туда ли мы повернули. Если пользователь ввёл налево, значит, повернули Туда,
если любое другое слово, то Не туда.'''

# test = input()
#
# if test == 'налево':
#     print('Туда')
# else:
#     print('Не туда')

# 2 Гигрометр
'''Напишите программу, которая выведет Сухо, Влажно или Нормально в зависимости от введённого значения влажности.'''
''' Считается, что если влажность меньше 30%, то это очень сухо для человека; если больше 70%, то тоже плохо,
слишком влажно. А если от 30 до 70%, то в самый раз!'''

# humidity = int(input())
#
# if humidity < 30:
#     print('Сухо')
# elif humidity > 70:
#     print('Влажно')
# else:
#     print('Нормально')

# 3 Синхронизированные орбиты. 1-й шаг
'''Орбиты спутников, вращающихся относительно центрального тела, называются синхронизированными, если относятся как целые числа.'''

'''Напишите программу, которая проверит, делится ли введённое число на какое-то целое, не превышающее 9. Если делится, 
то выведите наибольшее из таких чисел. Если не делится (деление на 1 и само число не считается), то выведите -1.'''

# n = int(input())
#
# if n % 9 == 0 and 9 < n:
#     print(9)
# elif n % 8 == 0 and 8 < n:
#     print(8)
# elif n % 7 == 0 and 7 < n:
#     print(7)
# elif n % 6 == 0 and 6 < n:
#     print(6)
# elif n % 5 == 0 and 5 < n:
#     print(5)
# elif n % 4 == 0 and 4 < n:
#     print(4)
# elif n % 3 == 0 and 3 < n:
#     print(3)
# elif n % 2 == 0 and 2 < n:
#     print(2)
# else:
#     print(-1)

# 4 Сравнение в переменной
'''Напишите программу, которая проверяет, является ли введённое целое число квадратом.'''

# n = int(input())
#
# condition = round(n ** 0.5) # тут лучше округлять
#
# print(n ** 0.5)
# print(condition ** 2)
#
# if condition ** 2 == n:
#     print('Квадрат')
# else:
#     print('Не квадрат')

# 5 Напишите программу, которая определяет, ввёл пользователь пустую строку или непустую.

# name = input()
#
# if name:
#     print(name)
# else:
#     print("Пустота!")
# очень полезная задачка, мне понравилась!

# 6 Не ноль. Определите, не равна ли нулю сумма двух введённых пользователем чисел?

# a, b = int(input()), int(input())
#
# result = (a + b) == 0
# print(result)

# пример
# True даёт 1, False даёт 0.
# Пользователь вводит число. Если оно кратно трём, то к нему нужно прибавить 10, а если не кратно, то вычесть 5.

# n = int(input())
#
# result = n + (n % 3 == 0) * 10 - (n % 3 != 0) * 5
# print(result)

# 9 + 1*10 - 0*5 = 9 + 10 = 19
# 10 + 0*10 - 1*5 = 10 - 5 = 5

# 7 Ближайшее чётное
'''Напишите программу, которая найдёт и выведет чётное число, ближайшее сверху к введённому пользователем.
Это значит, что если пользователь ввёл нечётное число, то вывести нужно следующее — большее на 1; 
если же введено чётное число, то вывести нужно большее на 2.
В задаче нельзя использовать условный оператор, примените преобразование логической переменной к целому числу'''

# n = int(input())
#
# result = n + (n % 2 == 0) + 1
# print(result)

'''(n % 2 == 0) дает:
1 если число четное (True → 1)
0 если число нечетное (False → 0)'''

# 8 Сумма цифр делится…
'''Напишите программу, которая определит, на какие цифры четырёхзначного числа делится его сумма цифр?
Вводится четырёхзначное число, состоящее из различных цифр и в котором нет нулей.'''

# test
# n = int(input())
#
# numbers = list(map(int, str(n)))
# print(numbers)

# n2 = input()
# print(n2)
# result = list(map(int, n2.split()))
# print(result)

# n = int(input())
#
# n1 = n // 1000
# n2 = (n // 100) % 10
# n3 = (n // 10) % 10
# n4 = n % 10
# total = n1 + n2 + n3 + n4
# # print(n1, n2, n3, n4)
# # print(total)
#
# found = False  # Флаг: найдена ли хоть одна подходящая цифра
#
# if total % n1 == 0:
#     print(f'Сумма цифр {n} делится на {n1}')
#     found = True
# if total % n2 == 0:
#     print(f'Сумма цифр {n} делится на {n2}')
#     found = True
# if total % n3 == 0:
#     print(f'Сумма цифр {n} делится на {n3}')
#     found = True
# if total % n4 == 0:
#     print(f'Сумма цифр {n} делится на {n4}')
#     found = True
#
# if not found: # if found = False
#     print(f'Сумма цифр {n} не делится на свои цифры.')

# рамочка :)
shirina = 40
print('*' * shirina)
for _ in range(5):
    print(f"*{' ' * (shirina - 2)}*")
print('*' * shirina)
